#
# HTTPS server configuration
#
server {
    listen 80 default_server;
    server_name localhost;
    rewrite ^ https://$server_name$request_uri? permanent;
}

server {
    listen 443 default_server ssl;
    server_name  localhost;
    root /home/chris/workspace/meridian/app;

    ssl_certificate      /home/chris/workspace/meridian/server/certs/server.crt.pem;
    ssl_certificate_key  /home/chris/workspace/meridian/server/certs/server.key.pem;
    ssl_client_certificate /home/chris/workspace/meridian/server/certs/root-ca.crt.pem;

    ssl_verify_client on;
    ssl_verify_depth 3;
    ssl_session_timeout  5m;

    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    ssl_prefer_server_ciphers   on;

    # Serve all static content this way, with no proxy to node
    # Default
    location ~* \.(html|css|js|hbs|txt|png|jpeg) {
        root /home/chris/workspace/meridian/app;
    }

    # All of the mode locations
    # These all have the same root, but are kept seperate for modularity.
    location ^~ /basic {
        root /home/chris/workspace/meridian/app/modes;
    }
    location ^~ /basic-with-settings {
        root /home/chris/workspace/meridian/app/modes;
    }
    location ^~ /embedded {
        root /home/chris/workspace/meridian/app/modes;
    }
    location ^~ /dashboard {
        root /home/chris/workspace/meridian/app/modes;
    }
    location ^~ /admin: {
        root /home/chris/workspace/meridian/app/modes;
    }

    # CMAPI test harness
    location ^~ /cmapi {
        root /home/chris/workspace/meridian/app/modes;
    }

    #Proxy everything sent through rest
    location /rest/ {
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_redirect off;

        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header SSL_CLIENT_CERT $ssl_client_cert;
        proxy_set_header SSL_CLIENT_S_DN $ssl_client_s_dn;
        proxy_set_header SSL_CLIENT_I_DN $ssl_client_i_dn;
        proxy_set_header SSL_CLIENT_VERIFY $ssl_client_verify;

        proxy_pass http://localhost:3000;
        rewrite ^/rest(/.*) $1 break;
    }
}
